name: Unity WebGL Automatic Build ðŸ‘½âœ¨ðŸš€

on:
  pull_request:
    branches:    
      - 'dev-build'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Unity Build ðŸ‘½
    runs-on: ubuntu-latest

    steps:
      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
          ls
          
      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Verify LFS Cache
        run: |
          echo "LFS cache directory contents:"
          ls -al .git/lfs || echo ".git/lfs directory does not exist"

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      # Cache Unity Library
      - name: Cache Library directory
        uses: actions/cache@v3
        id: unity-cache
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Verify Library Cache
        run: |
          echo "Library directory contents:"
          ls -al Library || echo "Library directory does not exist"

      # Build Unity Project
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          buildsPath: dev-build/build
          allowDirtyBuild: true

      # Push the build artifacts to the dev-build branch
      - name: Push build artifacts to dev-build branch
        run: |
          git config user.name "prathm"
          git config user.email "prathm@example.com"
          git add dev-build/build
          git commit -m "Add WebGL build artifacts"
          git push origin dev-build

  deploy:
    name: Deploy Build to Main ðŸš€
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout main branch
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main

      # Checkout dev-build branch
      - name: Checkout dev-build branch
        uses: actions/checkout@v3
        with:
          ref: dev-build

      # Configure Git user
      - name: Configure Git user
        run: |
          git config user.name "prathm"
          git config user.email "prathm@example.com"

      # Forcefully remove and update build folder
      - name: Forcefully remove and update build folder
        run: |
          git checkout main
          rm -rf build/ || echo "No build directory to remove"
          cp -r dev-build/build build/
          git add -f build/
          git commit -m "Update build from dev-build" || echo "No changes to commit"
          git push origin main
